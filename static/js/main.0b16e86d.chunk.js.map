{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","removeItem","editItem","map","item","id","title","console","log","key","style","display","marginTop","justifyContent","type","onClick","marginLeft","color","Alert","msg","removeAlert","useEffect","timeout","setTimeout","clearTimeout","className","backgroundColor","App","useState","setItem","localStorage","getItem","JSON","parse","getLocalStorage","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","stringify","onSubmit","e","preventDefault","x","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b16e86d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst List = ({ list, removeItem, editItem }) => {\n  return (\n    <div>\n      {list.map((item) => {\n        const { id, title } = item;\n        console.log(id);\n        return (\n          <article\n            key={id}\n            style={{\n              display: \"flex\",\n              marginTop: \"1rem\",\n              justifyContent: \"center\",\n            }}\n          >\n            <p>{title}</p>\n            <div>\n              <button type=\"button\" onClick={() => editItem(id)}>\n                edit\n              </button>\n              <button\n                type=\"button\"\n                style={{ marginLeft: \".5rem\", color: \"red\" }}\n                onClick={() => removeItem(id)}\n              >\n                delete\n              </button>\n            </div>\n          </article>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from \"react\";\n\nconst Alert = ({ msg, style, removeAlert, list }) => {\n  //removeAlert initial state is false, so it doesn't show\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, [list]);\n  return (\n    <div className=\"alert-container\">\n      <p style={{ backgroundColor: `${style}` }}>{msg}</p>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"./List\";\nimport Alert from \"./Alert\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n  } else {\n    return [];\n  }\n};\n\nfunction App() {\n  const [item, setItem] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", style: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(\"hello\");\n    if (!item) {\n      showAlert(true, \"Please enter the item\", \"red\");\n    } else if (item && isEditing) {\n      setList(\n        list.map((x) => {\n          if (x.id === editID) {\n            return { ...x, title: item };\n          }\n          return x;\n        })\n      );\n      setItem(\"\");\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, \"success edit, value is change\", \"green\");\n    } else {\n      showAlert(true, \"new item is added\", \"green\");\n      const newItem = { id: new Date().getTime().toString(), title: item };\n      setList([...list, newItem]);\n      setItem(\"\");\n    }\n  };\n\n  const showAlert = (show = false, msg = \"\", style = \"\") => {\n    setAlert({ show, msg, style });\n  };\n  const clearList = () => {\n    //ideally add yes or not btns in alert and without settimeout\n    showAlert(true, \"List is empty\", \"red\");\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, \"You are deleting an item\", \"red\");\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setItem(specificItem.title); //to show on input box the current value\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <div className=\"main-container\">\n      <form onSubmit={handleSubmit}>\n        <h1>Shopping List</h1>\n        <p>React CRUD with Local Storage(not focus on UI/styling)</p>\n        <div className=\"alert-container\">\n          {alert.show && <Alert {...alert} removeAlert={showAlert} />}\n        </div>\n        <div className=\"form-control\">\n          <input\n            type=\"text\"\n            placeholder=\"name of the item\"\n            value={item}\n            onChange={(e) => setItem(e.target.value)}\n          />\n          <button className=\"button-lg\" type=\"submit\">\n            {isEditing ? \"edit\" : \"submit\"}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className=\"list-container\">\n          <List list={list} removeItem={removeItem} editItem={editItem} />\n\n          <button className=\"clear-btn button-lg\" onClick={clearList}>\n            Clear All\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n// <button className=\"clear-btn button-lg\" onClick={() => setList([]) without create function\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}